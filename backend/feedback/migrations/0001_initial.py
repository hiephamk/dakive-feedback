# Generated by Django 5.2.7 on 2025-10-30 09:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Building', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OptionalFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_rating', models.IntegerField(blank=True, null=True)),
                ('cleaning_rating', models.IntegerField(blank=True, null=True)),
                ('support_rating', models.IntegerField(blank=True, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Building.building')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_feedback', to='Building.organization')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_feedback', to='Building.room')),
            ],
        ),
        migrations.CreateModel(
            name='Room_Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature_rating', models.IntegerField(default=0)),
                ('temperature_notes', models.TextField(blank=True, null=True)),
                ('air_quality_rating', models.IntegerField(default=0)),
                ('air_quality_notes', models.TextField(blank=True, null=True)),
                ('draft_rating', models.IntegerField(default=0)),
                ('draft_notes', models.TextField(blank=True, null=True)),
                ('odor_rating', models.IntegerField(default=0)),
                ('odor_notes', models.TextField(blank=True, null=True)),
                ('lighting_rating', models.IntegerField(default=0)),
                ('lighting_notes', models.TextField(blank=True, null=True)),
                ('structural_change_rating', models.IntegerField(default=0)),
                ('structural_change_notes', models.TextField(blank=True, null=True)),
                ('cleanliness_rating', models.IntegerField(default=0)),
                ('cleanliness_notes', models.TextField(blank=True, null=True)),
                ('maintenance_notes', models.TextField(blank=True, null=True)),
                ('general_notes', models.TextField(blank=True, null=True)),
                ('feedback_status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hasViewed', models.BooleanField(default=False)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_report', to='Building.building')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_report', to='Building.organization')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_report', to='Building.room')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor_Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('co2', models.FloatField(blank=True, null=True)),
                ('light', models.IntegerField(blank=True, default=False, null=True)),
                ('motion', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(unique=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, unique=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_report', to='Building.building')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensor_report', to='Building.room')),
            ],
        ),
    ]
